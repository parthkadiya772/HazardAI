{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHREE\\\\Documents\\\\AI and Automation\\\\Sem 3\\\\MAI\\\\Project\\\\Project\\\\HazardAI\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"./components/ui/button\";\nimport { Input } from \"./components/ui/input\";\nimport { Label } from \"./components/ui/label\";\nimport { Textarea } from \"./components/ui/textarea\";\nimport axios from 'axios';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"./components/ui/card\";\nimport { parse } from \"date-fns\";\n\n// Define the Hazard type \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Placeholder function to interact with LLAMA\nconst generateMitigations = async hazard => {\n  try {\n    const response = await axios.post('http://localhost:5000/generate', {\n      prompt: `Detected hazard: ${hazard.message}. How can this be mitigated?`\n    });\n    return response.data.response;\n  } catch (error) {\n    console.error('Error generating mitigations:', error);\n    return 'Error generating mitigation.';\n  }\n};\nconst HazardDetection = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [jsonData, setJsonData] = useState(null);\n  const [hazards, setHazards] = useState([]);\n  const [safetyText, setSafetyText] = useState(\"\");\n  const [mitigations, setMitigations] = useState([]);\n  const [showJsonContext, setShowJsonContext] = useState(false);\n  const handleFileChange = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0]; // Optional chaining in case no file is selected\n    if (file) {\n      setSelectedFile(file);\n      const reader = new FileReader();\n      reader.onload = loadEvent => {\n        try {\n          var _loadEvent$target;\n          const json = JSON.parse((_loadEvent$target = loadEvent.target) === null || _loadEvent$target === void 0 ? void 0 : _loadEvent$target.result); // Cast the result to a string\n          setJsonData(json);\n          console.log(\"Parsed JSON Data:\", json);\n        } catch (error) {\n          console.error(\"Error parsing JSON:\", error);\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0]; // Access the first file\n    if (file.type === \"application/json\") {\n      setSelectedFile(file);\n      parse;\n      const reader = new FileReader();\n      reader.onload = loadEvent => {\n        try {\n          var _loadEvent$target2;\n          const json = JSON.parse((_loadEvent$target2 = loadEvent.target) === null || _loadEvent$target2 === void 0 ? void 0 : _loadEvent$target2.result); // Cast the result to a string\n          setJsonData(json);\n          console.log(\"Parsed JSON Data:\", json);\n        } catch (error) {\n          console.error(\"Error parsing JSON:\", error);\n        }\n      };\n      reader.readAsText(file);\n    } else {\n      console.error(\"Only JSON files are accepted\");\n    }\n  };\n  const detectHazards = (data, keyConfig) => {\n    const hazards = [];\n    const uniqueHazards = new Set(); // Track hazard types or unique identifiers\n    const stack = [{\n      obj: data,\n      path: \"\"\n    }]; // Stack with objects and their paths\n\n    while (stack.length > 0) {\n      const {\n        obj,\n        path\n      } = stack.pop(); // Get the next item and its path\n\n      if (typeof obj !== \"object\" || obj === null) continue;\n\n      // Traverse keys of the current object\n      Object.keys(obj).forEach(key => {\n        const newPath = path ? `${path}.${key}` : key; // Update the path\n\n        if (typeof obj[key] === \"object\" && obj[key] !== null) {\n          stack.push({\n            obj: obj[key],\n            path: newPath\n          }); // Add child objects with updated path\n        } else {\n          if (obj[\"Type\"] && obj[\"Type\"].toLowerCase() === \"hazard\" && key.toLowerCase() === \"name\") {\n            const hazardType = obj[key];\n            const hazardMessage = obj[\"Message\"];\n\n            // Avoid adding duplicates\n            const uniqueIdentifier = `${hazardType}-${hazardMessage}`;\n            if (!uniqueHazards.has(uniqueIdentifier)) {\n              hazards.push({\n                type: hazardType,\n                message: hazardMessage,\n                riskLevel: \"Unknown\",\n                path: newPath // Use the calculated newPath\n              });\n              uniqueHazards.add(uniqueIdentifier);\n              console.log(`Hazard detected: ${hazardType} - ${hazardMessage}`);\n            }\n          }\n        }\n      });\n\n      // If the object contains \"Hazards\", process them directly\n      if (obj.Hazards && Array.isArray(obj.Hazards)) {\n        obj.Hazards.forEach((hazard, index) => {\n          const uniqueIdentifier = `${hazard.Type || \"\"}-${hazard.Message || \"\"}`;\n          if (!uniqueHazards.has(uniqueIdentifier)) {\n            hazards.push({\n              type: hazard.Type || \"\",\n              message: hazard.Message || \"\",\n              riskLevel: hazard.RiskLevel || \"\",\n              path: `${path}.Hazards[${index}]` // Include index in the path for better traceability\n            });\n            uniqueHazards.add(uniqueIdentifier);\n          }\n        });\n      }\n\n      // If the object contains \"Properties\", process them for hazards\n      if (Array.isArray(obj.Properties)) {\n        const hazard = {\n          type: \"\",\n          message: \"\",\n          riskLevel: \"\",\n          targetType: \"\",\n          description: \"\",\n          path // Use the current path\n        };\n        obj.Properties.forEach(property => {\n          const [key, value] = property;\n          if (key === \"Type\" && value.LocalValue) {\n            hazard.type = value.LocalValue;\n          }\n          if (key === \"Risk\" && value.LocalValue) {\n            hazard.riskLevel = value.LocalValue;\n          }\n          if (key === \"TargetType\" && value.LocalValue) {\n            hazard.targetType = value.LocalValue;\n          }\n          if (key === \"Description\" && value.LocalValue) {\n            hazard.description = value.LocalValue;\n          }\n        });\n        if (hazard.type) {\n          const uniqueIdentifier = `${hazard.type}-${hazard.message || \"\"}`;\n          if (!uniqueHazards.has(uniqueIdentifier)) {\n            hazards.push(hazard);\n            uniqueHazards.add(uniqueIdentifier);\n          }\n        }\n      }\n    }\n    console.log(\"Detected Hazards:\", hazards);\n    return hazards;\n  };\n  const defaultKeyConfig = {\n    types: [\"Type\"],\n    typeKeys: [\"Name\", \"Type\"],\n    messageKeys: [\"Message\", \"Description\"],\n    riskKeys: [\"RiskLevel\", \"Severity\"]\n  };\n  const handleDetectHazards = () => {\n    if (jsonData) {\n      const detectedHazards = detectHazards(jsonData, defaultKeyConfig); // Pass the updated configuration\n      setHazards(detectedHazards);\n      const safetyText = detectedHazards.map((hazard, index) => `${index + 1} - ${hazard.type}:\\n  - ${hazard.message}`).join(\"\\n\\n\");\n      setSafetyText(safetyText);\n    }\n  };\n  const handleGenerateMitigations = async () => {\n    const mitigationsList = await Promise.all(hazards.map(async hazard => {\n      const mitigation = await generateMitigations(hazard);\n      return `${hazard.type}: ${mitigation}`;\n    }));\n    setMitigations(mitigationsList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto p-4\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          children: \"JSON Data Analysis for Hazard Detection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n          children: \"Upload a JSON file to analyze and generate safety texts for automatic hazard detection.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-dashed rounded-xl p-4\",\n          onDragOver: handleDragOver,\n          onDrop: handleDrop,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Drag and drop a JSON file or upload from device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            onChange: handleFileChange,\n            accept: \".json\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShowJsonContext(!showJsonContext),\n            children: showJsonContext ? \"Hide JSON Context\" : \"View JSON Context\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), showJsonContext && /*#__PURE__*/_jsxDEV(Textarea, {\n            value: JSON.stringify(jsonData, null, 2),\n            readOnly: true,\n            className: \"mt-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), jsonData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDetectHazards,\n            children: \"Detect Hazards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), safetyText && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-bold\",\n              children: \"Detected Hazards:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n              value: safetyText,\n              readOnly: true,\n              className: \"mt-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), hazards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleGenerateMitigations,\n            children: \"Generate Mitigations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), mitigations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-bold\",\n              children: \"Generated Mitigations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n              value: mitigations.join(\"\\n\\n\"),\n              readOnly: true,\n              className: \"mt-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s(HazardDetection, \"QtWkstLvLJl2aMjKv1dQCmzZRYs=\");\n_c = HazardDetection;\nexport default HazardDetection;\nvar _c;\n$RefreshReg$(_c, \"HazardDetection\");","map":{"version":3,"names":["React","useState","Button","Input","Label","Textarea","axios","Card","CardContent","CardDescription","CardHeader","CardTitle","parse","jsxDEV","_jsxDEV","generateMitigations","hazard","response","post","prompt","message","data","error","console","HazardDetection","_s","selectedFile","setSelectedFile","jsonData","setJsonData","hazards","setHazards","safetyText","setSafetyText","mitigations","setMitigations","showJsonContext","setShowJsonContext","handleFileChange","event","_event$target$files","file","target","files","reader","FileReader","onload","loadEvent","_loadEvent$target","json","JSON","result","log","readAsText","handleDragOver","preventDefault","handleDrop","dataTransfer","type","_loadEvent$target2","detectHazards","keyConfig","uniqueHazards","Set","stack","obj","path","length","pop","Object","keys","forEach","key","newPath","push","toLowerCase","hazardType","hazardMessage","uniqueIdentifier","has","riskLevel","add","Hazards","Array","isArray","index","Type","Message","RiskLevel","Properties","targetType","description","property","value","LocalValue","defaultKeyConfig","types","typeKeys","messageKeys","riskKeys","handleDetectHazards","detectedHazards","map","join","handleGenerateMitigations","mitigationsList","Promise","all","mitigation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","onDrop","onChange","accept","onClick","stringify","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/SHREE/Documents/AI and Automation/Sem 3/MAI/Project/Project/HazardAI/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"./components/ui/button\";\nimport { Input } from \"./components/ui/input\";\nimport { Label } from \"./components/ui/label\";\nimport { Textarea } from \"./components/ui/textarea\";\nimport axios from 'axios';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"./components/ui/card\";\nimport { parse } from \"date-fns\";\n\n\n// Define the Hazard type \ntype Hazard = { \n  type: string;\n  message: string;\n  riskLevel: string;\n  path: string;\n};\n\n// Placeholder function to interact with LLAMA\nconst generateMitigations = async (hazard: Hazard) => {\n  try {\n    const response = await axios.post('http://localhost:5000/generate', {\n      prompt: `Detected hazard: ${hazard.message}. How can this be mitigated?`\n    });\n    return response.data.response;\n  } catch (error) {\n    console.error('Error generating mitigations:', error);\n    return 'Error generating mitigation.';\n  }\n};\n\n\nconst HazardDetection = () => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [jsonData, setJsonData] = useState(null);\n  const [hazards, setHazards] = useState<Hazard[]>([]);\n  const [safetyText, setSafetyText] = useState(\"\");\n  const [mitigations, setMitigations] = useState<string[]>([]);\n  const [showJsonContext, setShowJsonContext] = useState(false);\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0]; // Optional chaining in case no file is selected\n    if (file) {\n      setSelectedFile(file);\n      const reader = new FileReader();\n      reader.onload = (loadEvent) => {\n        try {\n          const json = JSON.parse(loadEvent.target?.result as string); // Cast the result to a string\n          setJsonData(json);\n          console.log(\"Parsed JSON Data:\", json);\n        } catch (error) {\n          console.error(\"Error parsing JSON:\", error);\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n  \n\n  const handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n  };\n  \n\n  const handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0]; // Access the first file\n    if (file.type === \"application/json\") {\n      setSelectedFile(file);\n      parse\n      const reader = new FileReader();\n      reader.onload = (loadEvent) => {\n        try {\n          const json = JSON.parse(loadEvent.target?.result as string); // Cast the result to a string\n          setJsonData(json);\n          console.log(\"Parsed JSON Data:\", json);\n        } catch (error) {\n          console.error(\"Error parsing JSON:\", error);\n        }\n      };\n      reader.readAsText(file);\n    } else {\n      console.error(\"Only JSON files are accepted\");\n    }\n  };\n  \n\n  type KeyConfig = {\n    types: string[]; // Multiple potential type keys\n    typeKeys: string[]; // Multiple keys for the type (e.g., \"Name\", \"Type\")\n    messageKeys: string[]; // Multiple keys for message (e.g., \"Message\", \"Description\")\n    riskKeys: string[]; // Multiple keys for risk (e.g., \"RiskLevel\", \"Severity\")\n    [key: string]: string[]; // Allow for additional keys if needed\n  };\n  \n  \n  const detectHazards = (data: any, keyConfig: KeyConfig) => {\n    const hazards: Hazard[] = [];\n    const uniqueHazards = new Set(); // Track hazard types or unique identifiers\n    const stack: { obj: any; path: string }[] = [{ obj: data, path: \"\" }]; // Stack with objects and their paths\n    \n    while (stack.length > 0) {\n      const { obj, path } = stack.pop()!; // Get the next item and its path\n  \n      if (typeof obj !== \"object\" || obj === null) continue;\n  \n      // Traverse keys of the current object\n      Object.keys(obj).forEach((key) => {\n        const newPath = path ? `${path}.${key}` : key; // Update the path\n  \n        if (typeof obj[key] === \"object\" && obj[key] !== null) {\n          stack.push({ obj: obj[key], path: newPath }); // Add child objects with updated path\n        } else {\n          if (\n            obj[\"Type\"] &&\n            obj[\"Type\"].toLowerCase() === \"hazard\" &&\n            key.toLowerCase() === \"name\"\n          ) {\n            const hazardType = obj[key];\n            const hazardMessage = obj[\"Message\"];\n  \n            // Avoid adding duplicates\n            const uniqueIdentifier = `${hazardType}-${hazardMessage}`;\n            if (!uniqueHazards.has(uniqueIdentifier)) {\n              hazards.push({\n                type: hazardType,\n                message: hazardMessage,\n                riskLevel: \"Unknown\",\n                path: newPath, // Use the calculated newPath\n              });\n              uniqueHazards.add(uniqueIdentifier);\n              console.log(`Hazard detected: ${hazardType} - ${hazardMessage}`);\n            }\n          }\n        }\n      });\n  \n      // If the object contains \"Hazards\", process them directly\n      if (obj.Hazards && Array.isArray(obj.Hazards)) {\n        obj.Hazards.forEach((hazard: any, index: number) => {\n          const uniqueIdentifier = `${hazard.Type || \"\"}-${hazard.Message || \"\"}`;\n          if (!uniqueHazards.has(uniqueIdentifier)) {\n            hazards.push({\n              type: hazard.Type || \"\",\n              message: hazard.Message || \"\",\n              riskLevel: hazard.RiskLevel || \"\",\n              path: `${path}.Hazards[${index}]`, // Include index in the path for better traceability\n            });\n            uniqueHazards.add(uniqueIdentifier);\n          }\n        });\n      }\n  \n      // If the object contains \"Properties\", process them for hazards\n      if (Array.isArray(obj.Properties)) {\n        const hazard = {\n          type: \"\",\n          message: \"\",\n          riskLevel: \"\",\n          targetType: \"\",\n          description: \"\",\n          path, // Use the current path\n        };\n  \n        obj.Properties.forEach((property: any) => {\n          const [key, value] = property;\n  \n          if (key === \"Type\" && value.LocalValue) {\n            hazard.type = value.LocalValue;\n          }\n          if (key === \"Risk\" && value.LocalValue) {\n            hazard.riskLevel = value.LocalValue;\n          }\n          if (key === \"TargetType\" && value.LocalValue) {\n            hazard.targetType = value.LocalValue;\n          }\n          if (key === \"Description\" && value.LocalValue) {\n            hazard.description = value.LocalValue;\n          }\n        });\n  \n        if (hazard.type) {\n          const uniqueIdentifier = `${hazard.type}-${hazard.message || \"\"}`;\n          if (!uniqueHazards.has(uniqueIdentifier)) {\n            hazards.push(hazard);\n            uniqueHazards.add(uniqueIdentifier);\n          }\n        }\n      }\n    }\n  \n    console.log(\"Detected Hazards:\", hazards);\n    return hazards;\n  };  \n  \n  const defaultKeyConfig = {\n    types: [\"Type\"],\n    typeKeys: [\"Name\", \"Type\"],\n    messageKeys: [\"Message\", \"Description\"],\n    riskKeys: [\"RiskLevel\", \"Severity\"],\n  };\n  \n  const handleDetectHazards = () => {\n    if (jsonData) {\n      const detectedHazards = detectHazards(jsonData, defaultKeyConfig); // Pass the updated configuration\n      setHazards(detectedHazards);\n  \n      const safetyText = detectedHazards\n        .map(\n          (hazard, index) =>\n            `${index + 1} - ${hazard.type}:\\n  - ${hazard.message}`\n        )\n        .join(\"\\n\\n\");\n      setSafetyText(safetyText);\n    }\n  };\n\n  const handleGenerateMitigations = async () => {\n    const mitigationsList = await Promise.all(\n      hazards.map(async (hazard) => {\n        const mitigation = await generateMitigations(hazard);\n        return `${hazard.type}: ${mitigation}`;\n      })\n    );\n    setMitigations(mitigationsList);\n  };\n\n  return (\n    <div className=\"max-w-3xl mx-auto p-4\">\n      <Card>\n        <CardHeader>\n          <CardTitle>JSON Data Analysis for Hazard Detection</CardTitle>\n          <CardDescription>\n            Upload a JSON file to analyze and generate safety texts for\n            automatic hazard detection.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div\n            className=\"border-2 border-dashed rounded-xl p-4\"\n            onDragOver={handleDragOver}\n            onDrop={handleDrop}\n          >\n            <Label>Drag and drop a JSON file or upload from device</Label>\n            <Input type=\"file\" onChange={handleFileChange} accept=\".json\" />\n          </div>\n          {selectedFile && (\n            <div className=\"mt-4\">\n              <Button onClick={() => setShowJsonContext(!showJsonContext)}>\n                {showJsonContext ? \"Hide JSON Context\" : \"View JSON Context\"}\n              </Button>\n              {showJsonContext && (\n                <Textarea\n                  value={JSON.stringify(jsonData, null, 2)}\n                  readOnly\n                  className=\"mt-4\"\n                />\n              )}\n            </div>\n          )}\n          {jsonData && (\n            <div className=\"mt-4\">\n              <Button onClick={handleDetectHazards}>Detect Hazards</Button>\n              {safetyText && (\n                <div className=\"mt-4\">\n                  <h2 className=\"text-lg font-bold\">Detected Hazards:</h2>\n                  <Textarea value={safetyText} readOnly className=\"mt-4\" />\n                </div>\n              )}\n            </div>\n          )}\n          {hazards.length > 0 && (\n            <div className=\"mt-4\">\n              <Button onClick={handleGenerateMitigations}>\n                Generate Mitigations\n              </Button>\n              {mitigations.length > 0 && (\n                <div className=\"mt-4\">\n                  <h2 className=\"text-lg font-bold\">Generated Mitigations:</h2>\n                  <Textarea\n                    value={mitigations.join(\"\\n\\n\")}\n                    readOnly\n                    className=\"mt-4\"\n                  />\n                </div>\n              )}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default HazardDetection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,IAAI,EACJC,WAAW,EACXC,eAAe,EACfC,UAAU,EACVC,SAAS,QACJ,sBAAsB;AAC7B,SAASC,KAAK,QAAQ,UAAU;;AAGhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA;AACA,MAAMC,mBAAmB,GAAG,MAAOC,MAAc,IAAK;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,gCAAgC,EAAE;MAClEC,MAAM,EAAE,oBAAoBH,MAAM,CAACI,OAAO;IAC5C,CAAC,CAAC;IACF,OAAOH,QAAQ,CAACI,IAAI,CAACJ,QAAQ;EAC/B,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,8BAA8B;EACvC;AACF,CAAC;AAGD,MAAME,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAc,IAAI,CAAC;EACnE,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAAC+B,UAAU,EAAEC,aAAa,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAW,EAAE,CAAC;EAC5D,MAAM,CAACmC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMqC,gBAAgB,GAAIC,KAA0C,IAAK;IAAA,IAAAC,mBAAA;IACvE,MAAMC,IAAI,IAAAD,mBAAA,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAqB,CAAC,CAAC,CAAC,CAAC;IACtC,IAAIC,IAAI,EAAE;MACRd,eAAe,CAACc,IAAI,CAAC;MACrB,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAIC,SAAS,IAAK;QAC7B,IAAI;UAAA,IAAAC,iBAAA;UACF,MAAMC,IAAI,GAAGC,IAAI,CAACtC,KAAK,EAAAoC,iBAAA,GAACD,SAAS,CAACL,MAAM,cAAAM,iBAAA,uBAAhBA,iBAAA,CAAkBG,MAAgB,CAAC,CAAC,CAAC;UAC7DtB,WAAW,CAACoB,IAAI,CAAC;UACjB1B,OAAO,CAAC6B,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;QACxC,CAAC,CAAC,OAAO3B,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC7C;MACF,CAAC;MACDsB,MAAM,CAACS,UAAU,CAACZ,IAAI,CAAC;IACzB;EACF,CAAC;EAGD,MAAMa,cAAc,GAAIf,KAAsC,IAAK;IACjEA,KAAK,CAACgB,cAAc,CAAC,CAAC;EACxB,CAAC;EAGD,MAAMC,UAAU,GAAIjB,KAAsC,IAAK;IAC7DA,KAAK,CAACgB,cAAc,CAAC,CAAC;IACtB,MAAMd,IAAI,GAAGF,KAAK,CAACkB,YAAY,CAACd,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,IAAIF,IAAI,CAACiB,IAAI,KAAK,kBAAkB,EAAE;MACpC/B,eAAe,CAACc,IAAI,CAAC;MACrB7B,KAAK;MACL,MAAMgC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAIC,SAAS,IAAK;QAC7B,IAAI;UAAA,IAAAY,kBAAA;UACF,MAAMV,IAAI,GAAGC,IAAI,CAACtC,KAAK,EAAA+C,kBAAA,GAACZ,SAAS,CAACL,MAAM,cAAAiB,kBAAA,uBAAhBA,kBAAA,CAAkBR,MAAgB,CAAC,CAAC,CAAC;UAC7DtB,WAAW,CAACoB,IAAI,CAAC;UACjB1B,OAAO,CAAC6B,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;QACxC,CAAC,CAAC,OAAO3B,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC7C;MACF,CAAC;MACDsB,MAAM,CAACS,UAAU,CAACZ,IAAI,CAAC;IACzB,CAAC,MAAM;MACLlB,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAC;IAC/C;EACF,CAAC;EAYD,MAAMsC,aAAa,GAAGA,CAACvC,IAAS,EAAEwC,SAAoB,KAAK;IACzD,MAAM/B,OAAiB,GAAG,EAAE;IAC5B,MAAMgC,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,MAAMC,KAAmC,GAAG,CAAC;MAAEC,GAAG,EAAE5C,IAAI;MAAE6C,IAAI,EAAE;IAAG,CAAC,CAAC,CAAC,CAAC;;IAEvE,OAAOF,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;MACvB,MAAM;QAAEF,GAAG;QAAEC;MAAK,CAAC,GAAGF,KAAK,CAACI,GAAG,CAAC,CAAE,CAAC,CAAC;;MAEpC,IAAI,OAAOH,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;;MAE7C;MACAI,MAAM,CAACC,IAAI,CAACL,GAAG,CAAC,CAACM,OAAO,CAAEC,GAAG,IAAK;QAChC,MAAMC,OAAO,GAAGP,IAAI,GAAG,GAAGA,IAAI,IAAIM,GAAG,EAAE,GAAGA,GAAG,CAAC,CAAC;;QAE/C,IAAI,OAAOP,GAAG,CAACO,GAAG,CAAC,KAAK,QAAQ,IAAIP,GAAG,CAACO,GAAG,CAAC,KAAK,IAAI,EAAE;UACrDR,KAAK,CAACU,IAAI,CAAC;YAAET,GAAG,EAAEA,GAAG,CAACO,GAAG,CAAC;YAAEN,IAAI,EAAEO;UAAQ,CAAC,CAAC,CAAC,CAAC;QAChD,CAAC,MAAM;UACL,IACER,GAAG,CAAC,MAAM,CAAC,IACXA,GAAG,CAAC,MAAM,CAAC,CAACU,WAAW,CAAC,CAAC,KAAK,QAAQ,IACtCH,GAAG,CAACG,WAAW,CAAC,CAAC,KAAK,MAAM,EAC5B;YACA,MAAMC,UAAU,GAAGX,GAAG,CAACO,GAAG,CAAC;YAC3B,MAAMK,aAAa,GAAGZ,GAAG,CAAC,SAAS,CAAC;;YAEpC;YACA,MAAMa,gBAAgB,GAAG,GAAGF,UAAU,IAAIC,aAAa,EAAE;YACzD,IAAI,CAACf,aAAa,CAACiB,GAAG,CAACD,gBAAgB,CAAC,EAAE;cACxChD,OAAO,CAAC4C,IAAI,CAAC;gBACXhB,IAAI,EAAEkB,UAAU;gBAChBxD,OAAO,EAAEyD,aAAa;gBACtBG,SAAS,EAAE,SAAS;gBACpBd,IAAI,EAAEO,OAAO,CAAE;cACjB,CAAC,CAAC;cACFX,aAAa,CAACmB,GAAG,CAACH,gBAAgB,CAAC;cACnCvD,OAAO,CAAC6B,GAAG,CAAC,oBAAoBwB,UAAU,MAAMC,aAAa,EAAE,CAAC;YAClE;UACF;QACF;MACF,CAAC,CAAC;;MAEF;MACA,IAAIZ,GAAG,CAACiB,OAAO,IAAIC,KAAK,CAACC,OAAO,CAACnB,GAAG,CAACiB,OAAO,CAAC,EAAE;QAC7CjB,GAAG,CAACiB,OAAO,CAACX,OAAO,CAAC,CAACvD,MAAW,EAAEqE,KAAa,KAAK;UAClD,MAAMP,gBAAgB,GAAG,GAAG9D,MAAM,CAACsE,IAAI,IAAI,EAAE,IAAItE,MAAM,CAACuE,OAAO,IAAI,EAAE,EAAE;UACvE,IAAI,CAACzB,aAAa,CAACiB,GAAG,CAACD,gBAAgB,CAAC,EAAE;YACxChD,OAAO,CAAC4C,IAAI,CAAC;cACXhB,IAAI,EAAE1C,MAAM,CAACsE,IAAI,IAAI,EAAE;cACvBlE,OAAO,EAAEJ,MAAM,CAACuE,OAAO,IAAI,EAAE;cAC7BP,SAAS,EAAEhE,MAAM,CAACwE,SAAS,IAAI,EAAE;cACjCtB,IAAI,EAAE,GAAGA,IAAI,YAAYmB,KAAK,GAAG,CAAE;YACrC,CAAC,CAAC;YACFvB,aAAa,CAACmB,GAAG,CAACH,gBAAgB,CAAC;UACrC;QACF,CAAC,CAAC;MACJ;;MAEA;MACA,IAAIK,KAAK,CAACC,OAAO,CAACnB,GAAG,CAACwB,UAAU,CAAC,EAAE;QACjC,MAAMzE,MAAM,GAAG;UACb0C,IAAI,EAAE,EAAE;UACRtC,OAAO,EAAE,EAAE;UACX4D,SAAS,EAAE,EAAE;UACbU,UAAU,EAAE,EAAE;UACdC,WAAW,EAAE,EAAE;UACfzB,IAAI,CAAE;QACR,CAAC;QAEDD,GAAG,CAACwB,UAAU,CAAClB,OAAO,CAAEqB,QAAa,IAAK;UACxC,MAAM,CAACpB,GAAG,EAAEqB,KAAK,CAAC,GAAGD,QAAQ;UAE7B,IAAIpB,GAAG,KAAK,MAAM,IAAIqB,KAAK,CAACC,UAAU,EAAE;YACtC9E,MAAM,CAAC0C,IAAI,GAAGmC,KAAK,CAACC,UAAU;UAChC;UACA,IAAItB,GAAG,KAAK,MAAM,IAAIqB,KAAK,CAACC,UAAU,EAAE;YACtC9E,MAAM,CAACgE,SAAS,GAAGa,KAAK,CAACC,UAAU;UACrC;UACA,IAAItB,GAAG,KAAK,YAAY,IAAIqB,KAAK,CAACC,UAAU,EAAE;YAC5C9E,MAAM,CAAC0E,UAAU,GAAGG,KAAK,CAACC,UAAU;UACtC;UACA,IAAItB,GAAG,KAAK,aAAa,IAAIqB,KAAK,CAACC,UAAU,EAAE;YAC7C9E,MAAM,CAAC2E,WAAW,GAAGE,KAAK,CAACC,UAAU;UACvC;QACF,CAAC,CAAC;QAEF,IAAI9E,MAAM,CAAC0C,IAAI,EAAE;UACf,MAAMoB,gBAAgB,GAAG,GAAG9D,MAAM,CAAC0C,IAAI,IAAI1C,MAAM,CAACI,OAAO,IAAI,EAAE,EAAE;UACjE,IAAI,CAAC0C,aAAa,CAACiB,GAAG,CAACD,gBAAgB,CAAC,EAAE;YACxChD,OAAO,CAAC4C,IAAI,CAAC1D,MAAM,CAAC;YACpB8C,aAAa,CAACmB,GAAG,CAACH,gBAAgB,CAAC;UACrC;QACF;MACF;IACF;IAEAvD,OAAO,CAAC6B,GAAG,CAAC,mBAAmB,EAAEtB,OAAO,CAAC;IACzC,OAAOA,OAAO;EAChB,CAAC;EAED,MAAMiE,gBAAgB,GAAG;IACvBC,KAAK,EAAE,CAAC,MAAM,CAAC;IACfC,QAAQ,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;IAC1BC,WAAW,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;IACvCC,QAAQ,EAAE,CAAC,WAAW,EAAE,UAAU;EACpC,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIxE,QAAQ,EAAE;MACZ,MAAMyE,eAAe,GAAGzC,aAAa,CAAChC,QAAQ,EAAEmE,gBAAgB,CAAC,CAAC,CAAC;MACnEhE,UAAU,CAACsE,eAAe,CAAC;MAE3B,MAAMrE,UAAU,GAAGqE,eAAe,CAC/BC,GAAG,CACF,CAACtF,MAAM,EAAEqE,KAAK,KACZ,GAAGA,KAAK,GAAG,CAAC,MAAMrE,MAAM,CAAC0C,IAAI,UAAU1C,MAAM,CAACI,OAAO,EACzD,CAAC,CACAmF,IAAI,CAAC,MAAM,CAAC;MACftE,aAAa,CAACD,UAAU,CAAC;IAC3B;EACF,CAAC;EAED,MAAMwE,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC5C,MAAMC,eAAe,GAAG,MAAMC,OAAO,CAACC,GAAG,CACvC7E,OAAO,CAACwE,GAAG,CAAC,MAAOtF,MAAM,IAAK;MAC5B,MAAM4F,UAAU,GAAG,MAAM7F,mBAAmB,CAACC,MAAM,CAAC;MACpD,OAAO,GAAGA,MAAM,CAAC0C,IAAI,KAAKkD,UAAU,EAAE;IACxC,CAAC,CACH,CAAC;IACDzE,cAAc,CAACsE,eAAe,CAAC;EACjC,CAAC;EAED,oBACE3F,OAAA;IAAK+F,SAAS,EAAC,uBAAuB;IAAAC,QAAA,eACpChG,OAAA,CAACP,IAAI;MAAAuG,QAAA,gBACHhG,OAAA,CAACJ,UAAU;QAAAoG,QAAA,gBACThG,OAAA,CAACH,SAAS;UAAAmG,QAAA,EAAC;QAAuC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eAC9DpG,OAAA,CAACL,eAAe;UAAAqG,QAAA,EAAC;QAGjB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACbpG,OAAA,CAACN,WAAW;QAAAsG,QAAA,gBACVhG,OAAA;UACE+F,SAAS,EAAC,uCAAuC;UACjDM,UAAU,EAAE7D,cAAe;UAC3B8D,MAAM,EAAE5D,UAAW;UAAAsD,QAAA,gBAEnBhG,OAAA,CAACV,KAAK;YAAA0G,QAAA,EAAC;UAA+C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9DpG,OAAA,CAACX,KAAK;YAACuD,IAAI,EAAC,MAAM;YAAC2D,QAAQ,EAAE/E,gBAAiB;YAACgF,MAAM,EAAC;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC,EACLxF,YAAY,iBACXZ,OAAA;UAAK+F,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBhG,OAAA,CAACZ,MAAM;YAACqH,OAAO,EAAEA,CAAA,KAAMlF,kBAAkB,CAAC,CAACD,eAAe,CAAE;YAAA0E,QAAA,EACzD1E,eAAe,GAAG,mBAAmB,GAAG;UAAmB;YAAA2E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC,EACR9E,eAAe,iBACdtB,OAAA,CAACT,QAAQ;YACPwF,KAAK,EAAE3C,IAAI,CAACsE,SAAS,CAAC5F,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAE;YACzC6F,QAAQ;YACRZ,SAAS,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CACF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACN,EACAtF,QAAQ,iBACPd,OAAA;UAAK+F,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBhG,OAAA,CAACZ,MAAM;YAACqH,OAAO,EAAEnB,mBAAoB;YAAAU,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC5DlF,UAAU,iBACTlB,OAAA;YAAK+F,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACnBhG,OAAA;cAAI+F,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAC;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxDpG,OAAA,CAACT,QAAQ;cAACwF,KAAK,EAAE7D,UAAW;cAACyF,QAAQ;cAACZ,SAAS,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACN,EACApF,OAAO,CAACqC,MAAM,GAAG,CAAC,iBACjBrD,OAAA;UAAK+F,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBhG,OAAA,CAACZ,MAAM;YAACqH,OAAO,EAAEf,yBAA0B;YAAAM,QAAA,EAAC;UAE5C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACRhF,WAAW,CAACiC,MAAM,GAAG,CAAC,iBACrBrD,OAAA;YAAK+F,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACnBhG,OAAA;cAAI+F,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAC;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7DpG,OAAA,CAACT,QAAQ;cACPwF,KAAK,EAAE3D,WAAW,CAACqE,IAAI,CAAC,MAAM,CAAE;cAChCkB,QAAQ;cACRZ,SAAS,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACzF,EAAA,CApQID,eAAe;AAAAkG,EAAA,GAAflG,eAAe;AAsQrB,eAAeA,eAAe;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}