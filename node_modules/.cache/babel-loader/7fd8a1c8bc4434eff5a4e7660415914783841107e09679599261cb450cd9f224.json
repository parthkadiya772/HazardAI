{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHREE\\\\Documents\\\\AI and Automation\\\\Sem 3\\\\MAI\\\\Project\\\\Project\\\\HazardAI\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"./components/ui/button\";\nimport { Input } from \"./components/ui/input\";\nimport { Label } from \"./components/ui/label\";\nimport { Textarea } from \"./components/ui/textarea\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"./components/ui/card\";\n\n// Define the Hazard type \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Placeholder function to interact with LLAMA\nconst generateMitigations = async hazard => {\n  // Replace this with actual API call to LLAMA\n  return `Mitigation for ${hazard.type}: Follow standard safety protocols and use appropriate PPE.`;\n};\nconst HazardDetection = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [jsonData, setJsonData] = useState(null);\n  const [hazards, setHazards] = useState([]);\n  const [safetyText, setSafetyText] = useState(\"\");\n  const [mitigations, setMitigations] = useState([]);\n  const [showJsonContext, setShowJsonContext] = useState(false);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    const reader = new FileReader();\n    reader.onload = event => {\n      try {\n        const json = JSON.parse(event.target.result);\n        setJsonData(json);\n        console.log(\"Parsed JSON Data:\", json);\n      } catch (error) {\n        console.error(\"Error parsing JSON:\", error);\n      }\n    };\n    reader.readAsText(event.target.files[0]);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    if (file.type === \"application/json\") {\n      setSelectedFile(file);\n      const reader = new FileReader();\n      reader.onload = event => {\n        try {\n          const json = JSON.parse(event.target.result);\n          setJsonData(json);\n          console.log(\"Parsed JSON Data:\", json);\n        } catch (error) {\n          console.error(\"Error parsing JSON:\", error);\n        }\n      };\n      reader.readAsText(file);\n    } else {\n      console.error(\"Only JSON files are accepted\");\n    }\n  };\n  const defaultKeyConfig = {\n    types: [\"Type\", \"Category\", \"HazardType\"],\n    typeKeys: [\"Type\", \"Name\", \"HazardName\"],\n    messageKeys: [\"Message\", \"Description\", \"Details\"],\n    riskKeys: [\"RiskLevel\", \"Severity\", \"Impact\"]\n  };\n  const detectHazards = (data, keyConfig) => {\n    const hazards = [];\n    const recursiveDetect = (obj, path = \"\") => {\n      if (typeof obj !== \"object\" || obj === null) return;\n      const isHazard = keyConfig.types.some(key => {\n        var _obj$key;\n        return (_obj$key = obj[key]) === null || _obj$key === void 0 ? void 0 : _obj$key.toLowerCase().includes(\"hazard\");\n      });\n      if (isHazard) {\n        hazards.push({\n          type: keyConfig.typeKeys.map(key => obj[key]).find(Boolean) || \"Unknown Type\",\n          message: keyConfig.messageKeys.map(key => obj[key]).find(Boolean) || \"No message\",\n          riskLevel: keyConfig.riskKeys.map(key => obj[key]).find(Boolean) || \"Unknown\",\n          path\n        });\n      }\n      Object.keys(obj).forEach(key => {\n        const newPath = path ? `${path}.${key}` : key;\n        recursiveDetect(obj[key], newPath);\n      });\n    };\n    recursiveDetect(data);\n    return hazards;\n  };\n  const handleDetectHazards = () => {\n    if (jsonData) {\n      const detectedHazards = detectHazards(jsonData, defaultKeyConfig);\n      setHazards(detectedHazards);\n      const safetyText = detectedHazards.map((hazard, index) => `${index + 1} - ${hazard.type}:\\n  - ${hazard.message}\\n  - Risk Level: ${hazard.riskLevel}`).join(\"\\n\\n\");\n      setSafetyText(safetyText);\n      console.log(\"Detected Hazards:\", safetyText);\n    }\n  };\n  const handleGenerateMitigations = async () => {\n    const mitigationsList = await Promise.all(hazards.map(async hazard => {\n      const mitigation = await generateMitigations(hazard);\n      return `${hazard.type}: ${mitigation}`;\n    }));\n    setMitigations(mitigationsList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto p-4\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          children: \"JSON Data Analysis for Hazard Detection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n          children: \"Upload a JSON file to analyze and generate safety texts for automatic hazard detection.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-dashed rounded-xl p-4\",\n          onDragOver: handleDragOver,\n          onDrop: handleDrop,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Drag and drop a JSON file or upload from device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            onChange: handleFileChange,\n            accept: \".json\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShowJsonContext(!showJsonContext),\n            children: showJsonContext ? \"Hide JSON Context\" : \"View JSON Context\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), showJsonContext && /*#__PURE__*/_jsxDEV(Textarea, {\n            value: JSON.stringify(jsonData, null, 2),\n            readOnly: true,\n            className: \"mt-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), jsonData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDetectHazards,\n            children: \"Detect Hazards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), safetyText && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-bold\",\n              children: \"Detected Hazards:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n              value: safetyText,\n              readOnly: true,\n              className: \"mt-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), hazards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleGenerateMitigations,\n            children: \"Generate Mitigations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), mitigations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-bold\",\n              children: \"Generated Mitigations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n              value: mitigations.join(\"\\n\\n\"),\n              readOnly: true,\n              className: \"mt-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(HazardDetection, \"QtWkstLvLJl2aMjKv1dQCmzZRYs=\");\n_c = HazardDetection;\nexport default HazardDetection;\nvar _c;\n$RefreshReg$(_c, \"HazardDetection\");","map":{"version":3,"names":["React","useState","Button","Input","Label","Textarea","Card","CardContent","CardDescription","CardHeader","CardTitle","jsxDEV","_jsxDEV","generateMitigations","hazard","type","HazardDetection","_s","selectedFile","setSelectedFile","jsonData","setJsonData","hazards","setHazards","safetyText","setSafetyText","mitigations","setMitigations","showJsonContext","setShowJsonContext","handleFileChange","event","target","files","reader","FileReader","onload","json","JSON","parse","result","console","log","error","readAsText","handleDragOver","preventDefault","handleDrop","file","dataTransfer","defaultKeyConfig","types","typeKeys","messageKeys","riskKeys","detectHazards","data","keyConfig","recursiveDetect","obj","path","isHazard","some","key","_obj$key","toLowerCase","includes","push","map","find","Boolean","message","riskLevel","Object","keys","forEach","newPath","handleDetectHazards","detectedHazards","index","join","handleGenerateMitigations","mitigationsList","Promise","all","mitigation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","onDrop","onChange","accept","onClick","value","stringify","readOnly","length","_c","$RefreshReg$"],"sources":["C:/Users/SHREE/Documents/AI and Automation/Sem 3/MAI/Project/Project/HazardAI/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"./components/ui/button\";\nimport { Input } from \"./components/ui/input\";\nimport { Label } from \"./components/ui/label\";\nimport { Textarea } from \"./components/ui/textarea\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"./components/ui/card\";\n\n\n// Define the Hazard type \ntype Hazard = { type: string;\n  message: string;\n  riskLevel: string;\n  path: string;\n};\n// Placeholder function to interact with LLAMA\nconst generateMitigations = async (hazard: Hazard) => {\n  // Replace this with actual API call to LLAMA\n  return `Mitigation for ${hazard.type}: Follow standard safety protocols and use appropriate PPE.`;\n};\n\nconst HazardDetection = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [jsonData, setJsonData] = useState(null);\n  const [hazards, setHazards] = useState([]);\n  const [safetyText, setSafetyText] = useState(\"\");\n  const [mitigations, setMitigations] = useState([]);\n  const [showJsonContext, setShowJsonContext] = useState(false);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      try {\n        const json = JSON.parse(event.target.result);\n        setJsonData(json);\n        console.log(\"Parsed JSON Data:\", json);\n      } catch (error) {\n        console.error(\"Error parsing JSON:\", error);\n      }\n    };\n    reader.readAsText(event.target.files[0]);\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    if (file.type === \"application/json\") {\n      setSelectedFile(file);\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        try {\n          const json = JSON.parse(event.target.result);\n          setJsonData(json);\n          console.log(\"Parsed JSON Data:\", json);\n        } catch (error) {\n          console.error(\"Error parsing JSON:\", error);\n        }\n      };\n      reader.readAsText(file);\n    } else {\n      console.error(\"Only JSON files are accepted\");\n    }\n  };\n\n  const defaultKeyConfig = {\n    types: [\"Type\", \"Category\", \"HazardType\"],\n    typeKeys: [\"Type\", \"Name\", \"HazardName\"],\n    messageKeys: [\"Message\", \"Description\", \"Details\"],\n    riskKeys: [\"RiskLevel\", \"Severity\", \"Impact\"],\n  };\n  \n\n  const detectHazards = (data, keyConfig) => {\n    const hazards = [];\n    const recursiveDetect = (obj, path = \"\") => {\n      if (typeof obj !== \"object\" || obj === null) return;\n  \n      const isHazard = keyConfig.types.some((key) =>\n        obj[key]?.toLowerCase().includes(\"hazard\")\n      );\n  \n      if (isHazard) {\n        hazards.push({\n          type: keyConfig.typeKeys.map((key) => obj[key]).find(Boolean) || \"Unknown Type\",\n          message: keyConfig.messageKeys.map((key) => obj[key]).find(Boolean) || \"No message\",\n          riskLevel: keyConfig.riskKeys.map((key) => obj[key]).find(Boolean) || \"Unknown\",\n          path,\n        });\n      }\n  \n      Object.keys(obj).forEach((key) => {\n        const newPath = path ? `${path}.${key}` : key;\n        recursiveDetect(obj[key], newPath);\n      });\n    };\n  \n    recursiveDetect(data);\n    return hazards;\n  };\n  \n\n  const handleDetectHazards = () => {\n    if (jsonData) {\n      const detectedHazards = detectHazards(jsonData, defaultKeyConfig);\n      setHazards(detectedHazards);\n  \n      const safetyText = detectedHazards\n        .map(\n          (hazard, index) =>\n            `${index + 1} - ${hazard.type}:\\n  - ${hazard.message}\\n  - Risk Level: ${hazard.riskLevel}`\n        )\n        .join(\"\\n\\n\");\n      setSafetyText(safetyText);\n      console.log(\"Detected Hazards:\", safetyText);\n    }\n  };\n  \n\n  const handleGenerateMitigations = async () => {\n    const mitigationsList = await Promise.all(\n      hazards.map(async (hazard) => {\n        const mitigation = await generateMitigations(hazard);\n        return `${hazard.type}: ${mitigation}`;\n      })\n    );\n    setMitigations(mitigationsList);\n  };\n\n  return (\n    <div className=\"max-w-3xl mx-auto p-4\">\n      <Card>\n        <CardHeader>\n          <CardTitle>JSON Data Analysis for Hazard Detection</CardTitle>\n          <CardDescription>\n            Upload a JSON file to analyze and generate safety texts for\n            automatic hazard detection.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div\n            className=\"border-2 border-dashed rounded-xl p-4\"\n            onDragOver={handleDragOver}\n            onDrop={handleDrop}\n          >\n            <Label>Drag and drop a JSON file or upload from device</Label>\n            <Input type=\"file\" onChange={handleFileChange} accept=\".json\" />\n          </div>\n          {selectedFile && (\n            <div className=\"mt-4\">\n              <Button onClick={() => setShowJsonContext(!showJsonContext)}>\n                {showJsonContext ? \"Hide JSON Context\" : \"View JSON Context\"}\n              </Button>\n              {showJsonContext && (\n                <Textarea\n                  value={JSON.stringify(jsonData, null, 2)}\n                  readOnly\n                  className=\"mt-4\"\n                />\n              )}\n            </div>\n          )}\n          {jsonData && (\n            <div className=\"mt-4\">\n              <Button onClick={handleDetectHazards}>Detect Hazards</Button>\n              {safetyText && (\n                <div className=\"mt-4\">\n                  <h2 className=\"text-lg font-bold\">Detected Hazards:</h2>\n                  <Textarea value={safetyText} readOnly className=\"mt-4\" />\n                </div>\n              )}\n            </div>\n          )}\n          {hazards.length > 0 && (\n            <div className=\"mt-4\">\n              <Button onClick={handleGenerateMitigations}>\n                Generate Mitigations\n              </Button>\n              {mitigations.length > 0 && (\n                <div className=\"mt-4\">\n                  <h2 className=\"text-lg font-bold\">Generated Mitigations:</h2>\n                  <Textarea\n                    value={mitigations.join(\"\\n\\n\")}\n                    readOnly\n                    className=\"mt-4\"\n                  />\n                </div>\n              )}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default HazardDetection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}